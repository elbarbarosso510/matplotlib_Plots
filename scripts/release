#!/usr/bin/env node

'use strict';

/* eslint-disable no-console */

const { basename, dirname } = require('path');
const { writeFileSync } = require('fs');
const { execFileSync } = require('child_process');

const pkgJson = require('../package.json');
const pkgLockJson = require('../package-lock.json');

const [, prog, mode] = process.argv;

if (!['major', 'minor', 'patch'].includes(mode)) {
  console.error(`usage: ${basename(prog)} major|minor|patch`);
  // eslint-disable-next-line no-process-exit
  process.exit(1);
}

const { version: oldVersion } = require('../package.json');

let [major, minor, patch] = oldVersion.split(/\./).map(Number);

if (mode === 'major') major++;
else if (mode === 'minor') minor++;
else patch++;

const newVersion = [major, minor, patch].join('.');

console.log(`${oldVersion} -> ${newVersion}`);

pkgJson.version = newVersion;
pkgLockJson.version = newVersion;

writeFileSync(
  require.resolve('../package.json'),
  `${JSON.stringify(pkgJson, null, 2)}\n`
);
writeFileSync(
  require.resolve('../package-lock.json'),
  `${JSON.stringify(pkgLockJson, null, 2)}\n`
);

const tag = `v${newVersion}`;
const cwd = dirname(__dirname);

execFileSync(
  'git',
  ['commit', '-m', `Release ${tag}`, 'package.json', 'package-lock.json'],
  { cwd }
);
execFileSync('git', ['tag', `v${newVersion}`], { cwd });
execFileSync('git', ['push'], { cwd });
execFileSync('git', ['push', 'origin', 'tag', tag], { cwd });
